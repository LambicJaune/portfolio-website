/*
colors used

Text Color (black): #544855;
Primary Color (bight orange): #e13200;
Secondary Color (brown): #693d33;
Secondary Buttons Color (grey blue): #90aead;

Background-color (sand beige): #fbe9d0
*/

* {
    box-sizing: border-box;
}

body {
    background-color: #fbe9d0;
    font-family: 'bebas neue', serif;
    font-weight:200;
    font-size: 22px;
    line-height: normal;
}

header {
    font-size: 22px;
}

.navigation-list__item--active {
    text-decoration: none;
}

h1 {
    font-size: 36px;
}

h1:hover {
    opacity: 0.7;
}

a {
    color: #cb2c00;
}

a:visited {
    color: #693d33;
}


.navigation-list__item:visited {
    color: #cb2c00;
}

a:hover,
a:focus {
    text-decoration: none;

    /* No underlining when overing over link or selected using a keyboard */
}

a:active {
    color: #757575;

    /* changes the link text color to bright gray when the link is clicked */
}

a:focus {
    outline: 2px solid #cb2c00;

    /* adds a rust colored outline around the link when it has focus = is selected using the keyboard */
}

button {
    border: none;
    background-color: #cb2c00;
    font-family: inherit;
    color: #fff;

    /* added for the purpose of the exercise, as my normalize.css file removes browser styling and the font used here is already the same as the body font /
    /* text color on the button */
    text-decoration: none;

    /* also for the purpose of the exercise as my normalize file seemed to have removed that already */
    font-size: inherit;
    padding: 10px 20px;
    border-radius: 4px;
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
}

button:active {
    background-color: #757575;
}

button:focus {
    border: 1px solid #000;
}

.button__secondary {
    background-color: #90aead;
    color: #174351;
}

#contact-form-button {
    color: #fff;
}

.profile__portrait {
    float: left;
    width: 300px;
    margin-right: 40px;
    border-radius: 50%;
    transition-duration: 0.6s;
}

.profile__portrait:hover {
    transform: scale(1.1);
}

.page-footer {
    clear: both;
    display: flex;
    flex-direction: column;
    text-align: center;
    font-size: 22px;
}

.profile {
    max-width: 750px;
    margin: 0 auto;
}

.social-media-icons {
    width: 40px;
}

.about-text {
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
}

#contact-info {
    text-align: center;
    margin: 0 auto;
}

.table-container {
    max-width: 1000px;
    margin: 0 auto;
    text-align: center;
}

#contact-form form {
    display: flex;
    flex-direction: column;
    max-width: 400px;
    margin: 0 auto;
    gap: 10px;
}

#work-title {
    text-align: center;
}

.page-header {
    display: flex;
    width: 100%;
    padding: 20px;
    margin-bottom: 100px;
}

.page-header__item {
    flex: 0 1 130px;
    margin-top: 20px;
    margin-left: 100px;
}

.page-header__item img {
    max-width: 100%;
    height: auto;
}

.page-header__item:last-child {
    flex-grow: 1;
    text-align: right;
    margin-right: 100px;
    margin-top: 30px;
}

.navigation-list {
    list-style-type: none;
}

.navigation-list li {
    display: inline-block;
    margin-left: 15px;
}

/* start grid fallback */
.grid__item {
    display: inline-block;
    width: 33%;
}

/* end grid fallback */

@supports (display: grid) {
    .grid {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-gap: 20px;
        margin: 10px;
    }

    .grid__item {
        background-color: #b3b3b3;
        width: auto;
        min-height: auto;
        margin: 0;
        place-items: center;
        position: relative;
        overflow: hidden;
        transition: transform 0.3 ease;
    }

    .grid__item:hover {
        transform: scale(1.02);
        z-index: 1;
        cursor: pointer;
    }

    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #cb2c00;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        pointer-events: none; /* Prevents interfering with hover */
        transition: opacity 0.3s ease;
        font-weight: bold;
        font-size: 1.2rem;
        text-align: center;
        padding: 1rem;
    }

    .grid__item:hover .overlay {
        opacity: 0.9;
    }

    .grid__item:last-child {
        grid-column: 3 / 3;
        grid-row: 1 / 3;
    }
}

.button {
    border: none;
    display: inline-block;

    /* takes the font from the outer container */
    font-family: inherit;
    background-color: #cb2c00;
    color: #fff;
    text-decoration: none;
    padding: 10px;
    border-radius: 3px;
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
    transition: opacity 0.2s;
}

button {
    border: none;
    display: inline-block;

    /* takes the font from the outer container */
    font-family: inherit;
    background-color: #cb2c00;
    color: #fff;
    text-decoration: none;
    padding: 10px;
    border-radius: 3px;
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
    transition: opacity 0.2s;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
    cursor: pointer;
    opacity: 0.8;
}

@keyframes sun-color-change {
    0% {
        fill: #edc655;
    }

    50% {
        fill: #ee6210;
    }

    100% {
        fill: #edc655;
    }
}

#path84 {
    animation: 4s sun-color-change infinite linear;
}

@keyframes cloud-move {
    from {
        transform: translate(0, 0);
    }

    to {
        transform: translate(150px, 0);
    }
}

.path83-cloud {
    animation: 20s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
    from {
        transform: translateX(0) scale(1);
    }

    to {
        transform: translateX(-280px) scale(1.8);
    }
}

.path85-cloud {
    animation: 20s cloud-move-reverse infinite alternate linear;
    transform-origin: center;
    transform-box: fill-box;
}

@keyframes brighter-ground {
    0% {
        fill: #757575;
    }

    50% {
        fill: #28292a;
    }

    100% {
        fill: #757575;
    }
}

#path82 {
    animation: 4s brighter-ground infinite linear;
}

@media all and (max-width: 500px) {
    .grid {
        grid-template-columns: 1fr;
    }
}

@media all and (min-width: 500px) and (max-width: 750px) {
    .grid {
        grid-template-columns: 1fr 1fr;
    }
}

@media all and (max-width: 750px) {
    .grid {
        grid-gap: 10px;
    }

    .grid__item:last-child {
        grid-column: auto / auto;
        grid-row: auto / auto;
    }

    h1 {
        font-size: 30px;
    }
}
